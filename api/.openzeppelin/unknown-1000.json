{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x2f2692338fA8f709E250376000Db1E536301867e",
    "txHash": "0x40d49e6cc2b1cf555068b862aaeebc53c1711b1ae4005425b9037a5358024de3",
    "deployTransaction": {
      "hash": "0x40d49e6cc2b1cf555068b862aaeebc53c1711b1ae4005425b9037a5358024de3",
      "type": 0,
      "accessList": null,
      "blockHash": "0x19418d4cbf96b23d40d37e33124f08d30636673e44238fe1d2fe326a62bc3b7a",
      "blockNumber": 2,
      "transactionIndex": 0,
      "confirmations": 1,
      "from": "0xa4C2E4863AFD3F1c8614A84d94f30253aca5adD2",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x01dcd65000"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 1,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xe2b417168ba2f6fda603b03e0b6ff169b63a35b129fed87474bd2921b95ad13b",
      "s": "0x0db4a83d1aa2c9b1507d05c74f07d0b39c593a1efbe449d115b4fb08b4f9ccf8",
      "v": 2035,
      "creates": "0x2f2692338fA8f709E250376000Db1E536301867e",
      "chainId": 1000
    }
  },
  "proxies": [
    {
      "address": "0x32aB79d0392F8feA76857c581106359180552606",
      "txHash": "0x57b7f99c432e5fbd5facdffa333c43af68a06609626f2bf7e6ca3c0670dedac1",
      "kind": "transparent"
    },
    {
      "address": "0x54feCdd0E62d7C554Ed1a058c37b3b9A7f4c4f6B",
      "txHash": "0x2add9e7f37a1d1d012f55116ff0f247a0535fd7c8b36254c08a990dca152650a",
      "kind": "transparent"
    },
    {
      "address": "0xB91b4db1FcDb79Fe3d314379d43cf1854F6A1B1A",
      "txHash": "0x517eb447a7fb1dfe380d2b78c38c25ec9de5fd7caa2a032a9420120528338a0c",
      "kind": "transparent"
    },
    {
      "address": "0xcd283688e89Dd4a367BB636AE0C1A69425262253",
      "txHash": "0xe22cec20eb1be30fa0bf0558f63068d0659b3acae655c56c699365813c5e6145",
      "kind": "transparent"
    },
    {
      "address": "0xEc9f5c760E861B71955229698f17E40ebA842d16",
      "txHash": "0xbdf0e327b1769517a63f115c47b0f01b6aa5afa9b45bdd8faf4ef830c3efc6b4",
      "kind": "transparent"
    },
    {
      "address": "0xA323AC170314a9bc1f46A01426F88e043beA26A8",
      "txHash": "0x8e5c98b2a43ad128f9c4cf5e86e69c595ee1cdddeca1f6b36c9f698ec6c7bfe4",
      "kind": "transparent"
    },
    {
      "address": "0x1D23f0cf7Dbb55b063133cc53043027CF7514948",
      "txHash": "0x1dd473fb3c3536dc6fd09e169ae05a3fdfe9a0fd88d2586d22764ca6a18e510d",
      "kind": "transparent"
    },
    {
      "address": "0x913B6B0b0C98824a23CE8642982DC99B76389648",
      "txHash": "0x563de560b6cde636d82ae7f9a8e510bd73582f5ea61875c4a8578f9bedbe7bcb",
      "kind": "transparent"
    },
    {
      "address": "0x3184d10aECC21ED49a594Ba758BF3C8fCD27EB97",
      "txHash": "0x1903ae494b965deb41a2672d42adfd9652af1d58a6d77ca9e3153cd14ae50e90",
      "kind": "transparent"
    },
    {
      "address": "0x90a6975738b17aEf3E5e194eAc631d25D5929E14",
      "txHash": "0x6ad22fae255402ee2fe69eafdbce4e4a7dd10c56c1e005b1d6a80c1a4108f93e",
      "kind": "transparent"
    },
    {
      "address": "0xAcCBC6991F754E96976b4485260EeD16efD6eeE3",
      "txHash": "0x9a0f81a86b6bf0892ee68f513ce6f1bacaafc223ebbd46ecd74db624446bbfa0",
      "kind": "transparent"
    },
    {
      "address": "0xd7E8479Cb75608F8A661755d4f74178A3c3B9d73",
      "txHash": "0xd0b97698bdc4435b8077307950e11294a4d04b161d83a3be59b5b1517710e71e",
      "kind": "transparent"
    },
    {
      "address": "0x074684D1d6dCf1aa55B42e4F3c4E491850178b77",
      "txHash": "0xad728b293d94138817352aca5e574bb469cda863533f9c59ebd11d6134c50800",
      "kind": "transparent"
    },
    {
      "address": "0x809cFD853eb848dAeFD31f6f991D47CaDfE4f920",
      "txHash": "0x5dd46a3241bc857f317175cd16be35464959ff6b9c52197945e84f3ebd4d6250",
      "kind": "transparent"
    },
    {
      "address": "0x3971eC7FA50b8f780b40C9Daae8dE9c10b04729D",
      "txHash": "0xe8c83c4740cc26209133eb6084930f87e9a910182803f0b60168a44e282e6a68",
      "kind": "transparent"
    },
    {
      "address": "0xF40a93F3a30d5b4cA616ff76726582ab9f652B88",
      "txHash": "0x5403c340d99619650ab1a511c5489ae814f1bc4be27fef5583319f08d385e8ef",
      "kind": "transparent"
    },
    {
      "address": "0xD7c05FEF7d8774460215B64FF100728FC7BfBC25",
      "txHash": "0xeaa932fdd7e0afec753c94d835d8cc771ab5950aa737147ee3f40379b1cb5141",
      "kind": "transparent"
    },
    {
      "address": "0x6D2bCf5eF74776Dfeba0cDB67c0cb12EA6D49289",
      "txHash": "0x5020f94b182eb65aa19046941363759c7590a9aa8f9320c3bc1a0993d10d8ccf",
      "kind": "transparent"
    },
    {
      "address": "0x50099493dc486EFd940cFEbEb82E4D01eE11441f",
      "txHash": "0x3567450996d51cb2119995d87194ca332bf247be31b255d8fc023dff7d43be87",
      "kind": "transparent"
    },
    {
      "address": "0x76C25f14Bca0779bC951d11B1A8f01fA7909dc9C",
      "txHash": "0xecce0fb54ba01551ac1be4841865b4f65db5050f2a14ac5b3aeccc12a2ddeec3",
      "kind": "transparent"
    },
    {
      "address": "0x77889A9Aa555469044d5F49914bde8c2f251FA01",
      "txHash": "0xfb6721bdd540a61635f0e0bb8aa657b64aa079566284dd1ef5336ae545c314e4",
      "kind": "transparent"
    },
    {
      "address": "0x3336fbbD93e44AEA7F878f25Bfd8C9EDb5d91d30",
      "txHash": "0xd51fb87435286248d1eaaeac6bbebcf72cf1566452d9fcd32ecf26521107af98",
      "kind": "transparent"
    },
    {
      "address": "0x97D78c699262b3A8DfC99888Cf1288b846bF5F4a",
      "txHash": "0x7c3bdcdaa64a6e64bbe26160763565310bb3b8fe7d246ca94591f8d8f561c323",
      "kind": "transparent"
    },
    {
      "address": "0xdAb52782e4613F8B7e50958c7566fD8943B404A3",
      "txHash": "0x1340aef42c264e0c52b42817601152cf91515f8a97eec69a4a5b09c86eb33c89",
      "kind": "transparent"
    },
    {
      "address": "0x6221B4117d994E4fb2261b191bBaf5BCe03B1776",
      "txHash": "0x9577a72fba599d47c7d40b0a656fe893790c468f251859142438d7cdd4432296",
      "kind": "transparent"
    },
    {
      "address": "0x97ea2779d79BC38042175A478a9471b35753Cbc8",
      "txHash": "0xcc8d884e93a75328add3e40c45bf409e24213cbdbac994d91c0ceb48a0d8757b",
      "kind": "transparent"
    },
    {
      "address": "0x359dC2D4045ff9FFF2d645a47Bc466710160dF6A",
      "txHash": "0x6aa6b2a46983442ce150942934049b96e612e6a768f4403522e720477e51db9d",
      "kind": "transparent"
    },
    {
      "address": "0x24264Fca4fd76e11Fe28E8c26CE684296fA8ed8A",
      "txHash": "0x507763bf06574736b08519b4d9ad89620a096affd4799e1f771c1c791be2c2cf",
      "kind": "transparent"
    },
    {
      "address": "0x83F50A474a102429289A17cC9f047b0Ba71D37FA",
      "txHash": "0x31520d78eb5cfce9fc94b3f51db437313ac7fc0dc6d0f2aa2ad96df047628ad2",
      "kind": "transparent"
    },
    {
      "address": "0x836931042B244d508cc546bB509a634464060597",
      "txHash": "0xca5ef56a0bb8a6a9fa8b13a5a14df774f14efe313ff5ba75eb3ad80fbf1b0222",
      "kind": "transparent"
    },
    {
      "address": "0xBD575e1234F81c05D0d8AE8B0AB4Cc3Ce7E16c2B",
      "txHash": "0x5b5aeebf4b6270318d6954a8682e95c15674c8ab3584ac4473de7f1768791780",
      "kind": "transparent"
    },
    {
      "address": "0xC42B8C59388a3b632921fD2d1c3B96c783DbdB96",
      "txHash": "0x03a58120477e0768e8bf4dbe73d719ce41147a31c10113509492cfdd6722b656",
      "kind": "transparent"
    },
    {
      "address": "0x20d28A033c9aAF6D1C8757155106bBb4db92B7E5",
      "txHash": "0xf0ee23292767f5f8259534e9991dd0f5223d874f2c863505044efadf6a139e9b",
      "kind": "transparent"
    },
    {
      "address": "0x9eD292Df4C84A294A2bf4AA48466B10748684AB2",
      "txHash": "0xe563e9a13c26309078fe2b023c943e1b13a07be0dd5b3e569742bac0260e7948",
      "kind": "transparent"
    },
    {
      "address": "0xD10ea692E0379cC62234A698e6f71C2f817A2382",
      "txHash": "0x02b75991bce39b50e728520f5de36eccfff9f613135f35016176c51a1a694df3",
      "kind": "transparent"
    },
    {
      "address": "0x69D0578503Fc416cCb182494590E357cCfa7C041",
      "txHash": "0x9521201c77514b3aca921e8c3e6a6130e46d61a82c9c0b29e3d149c1477e15ad",
      "kind": "transparent"
    },
    {
      "address": "0x052b9F7E284BB9abaFADFc5c39f9BE1c689963Dd",
      "txHash": "0xa518f61a90265f625ff58c2ca153eb1a3828444079f5aa53f6db1f030c2c7099",
      "kind": "transparent"
    },
    {
      "address": "0xD237E4A11d83F1119BA50BAF5B4a814cDc997069",
      "txHash": "0x2ca1bdc077f1e703b9359ebcdfc074984bb4cdd39e99a76bc20c815556d05e53",
      "kind": "transparent"
    },
    {
      "address": "0x2BA21D2433E754d3b6a66F1EA8dCA44D0d77C595",
      "txHash": "0xc2788c736b853654dd49dddcb8e1a6913b8671970f9c20aaa4624deb71d40248",
      "kind": "transparent"
    },
    {
      "address": "0x48398F53f9f289903d1b148cFef2c53704B3A541",
      "txHash": "0x2605dd40669caf0768b1cd30d2c03fe64adb7021e5e9467fafbd62b6b9bae3bd",
      "kind": "transparent"
    },
    {
      "address": "0xcFF55E289e580204C2C6124EaD34473fe076A649",
      "txHash": "0xac1474ac0138acc25202d1dee72a49a45f0ba9ddd87ce1e9f09ea8fd49b25d1d",
      "kind": "transparent"
    },
    {
      "address": "0xb4692Be1bE62614eE03f079AD197CeB026db93a4",
      "txHash": "0x95c14e9ff62d66ce4af9deff204e54c3c396376aae2d106c770ba680b7f808fb",
      "kind": "transparent"
    },
    {
      "address": "0x466583c75Efd7ac9D272293eE58523323feC04f2",
      "txHash": "0x1caca5dd3ffe06689d4e08bc020395fbce10bb75cd9531f584bc65d36c5094ac",
      "kind": "transparent"
    },
    {
      "address": "0x6ac84847F34E450Ab02B2566975BEa2d3F692ACb",
      "txHash": "0x7be64996c574d983ef1758dea3d13b253e03d1d6132b24b804501454e7c65622",
      "kind": "transparent"
    },
    {
      "address": "0x2eeF0f9193239A49125576dB417720709650d498",
      "txHash": "0x4631ef87f30e6493f9e58a112d7aa99a24336368b95ce672864b2183ba4ac34d",
      "kind": "transparent"
    },
    {
      "address": "0x9aeb9DaD76c7F3f12a9C27f2c7240cE6Eaaa8562",
      "txHash": "0x0343bc802af61ee6fc7268fee5b6e8a40e582121dda3ea719a53d47d3cf41276",
      "kind": "transparent"
    },
    {
      "address": "0x988e44F04F00882Aca9dFA9E1Ad397FCBb3b5213",
      "txHash": "0xca05eef0be93df679470491f78cc80b280d09cf25581f11f633c1240448cfb46",
      "kind": "transparent"
    },
    {
      "address": "0xC60b76D201796BD0977DdC4DdB14000EbD64f107",
      "txHash": "0x26eea9cab84a68fae9834f5998fb1ee08d91708a1444720d8f8806c8b2220098",
      "kind": "transparent"
    },
    {
      "address": "0xA46F9dEB94bddcC518d7497bD9bA11b870ac291f",
      "txHash": "0x551dbb57c0fdf4dbd87be52b6801b38a9a0a16d4677acc1b9ea647a81d8ff4fb",
      "kind": "transparent"
    },
    {
      "address": "0x278b6dC1FE84f0521368378aFa695d3815b5b882",
      "txHash": "0x560c9725e60a01eded29f002df119be77248d81fc66a4f1378b4d7f4bb38d415",
      "kind": "transparent"
    },
    {
      "address": "0xb6A2a2d96B03764B0F6d822668ABfAC7A69Bb7D9",
      "txHash": "0xb475148eb7030601f5e04a329b19a6632054cace40f147166c82fe91996c3ceb",
      "kind": "transparent"
    },
    {
      "address": "0xfe713d509442bA2ac4f840099F123a4991C78574",
      "txHash": "0xb8073ca7e556caed9537721da28b47162f6b58b67f167599068cd1e0d0dcda31",
      "kind": "transparent"
    },
    {
      "address": "0x3ddF938EDFa6b1d1FD1F18Ce8bAdB457D292687A",
      "txHash": "0xa0659e0edaaf1d86a20314be5fbd469b0bcd44e97f99414e42aac6cfe1a75a30",
      "kind": "transparent"
    },
    {
      "address": "0x5A9F843c6FBaa8577193B5B992ae5F93822c1113",
      "txHash": "0xd40b7a4315ca1d14b2a28e11d0856e74c6ebd9aa608e5d0cd3a4ae75d5ee5a47",
      "kind": "transparent"
    },
    {
      "address": "0x901A16F868d89B3CF8429A9b3cD80734D58558A9",
      "txHash": "0x25aa51b32d987caa355052527aab25f1a63085befb5cef4e4ed786fee733db57",
      "kind": "transparent"
    },
    {
      "address": "0x2aB5343615D11Cd977fd27bAfDb59dca968Edc9F",
      "txHash": "0xa73383f43f6075df2c16a726e304b123b441739d857a81344186b2494b35eb71",
      "kind": "transparent"
    },
    {
      "address": "0xfDd94d952Cb338268b1F4D67983B5c4865a79Ba4",
      "txHash": "0x37674f77f1121773f4075f6eb4f19c11605defba4864fdd4dcc209ff005a56fe",
      "kind": "transparent"
    },
    {
      "address": "0xCC06dbCB19E44BE8BD56Dec177A1ceF11177331E",
      "txHash": "0x8c8b55820fec1cdb48480ba88268d77e9266c6481eea2990b16512fc6d12342d",
      "kind": "transparent"
    },
    {
      "address": "0xcc02C855ecb169a81e2aaa412C45a0372F4D99B4",
      "txHash": "0xd67ec9a1b338aaa25cb1765a685b8c6dd9d69571ac28b9bd01e93754eea31f58",
      "kind": "transparent"
    },
    {
      "address": "0x8fC0e7e200722c5c1830731F155C58cE36735774",
      "txHash": "0x411f70150d1b0fe0902567064e90b39cb42f576a00f448224b1ab300eab087f2",
      "kind": "transparent"
    },
    {
      "address": "0xeFa04388Ac8e5fa63C5472239AB0d633A5D57A84",
      "txHash": "0x50b1fe0e1575fb4f3b067cee0b4b1c1c24747299d987679bdba221af3c3374ed",
      "kind": "transparent"
    },
    {
      "address": "0x2AE0b881Dd90707a6bc2D5B41fca600fdE301362",
      "txHash": "0xc42b64de4c5acad53634d09c4ea9e77dc9e0ac5eb96aadd83cfe2e7dd08517a1",
      "kind": "transparent"
    },
    {
      "address": "0x7027Cad9C73Cf45526Eb7dd1d3dE84dbbB4206AE",
      "txHash": "0xea1ec4c6e546d07d9d3faa94e188b2f516f753cc5193625ca88b29276972e172",
      "kind": "transparent"
    },
    {
      "address": "0x57cf734252d8626dCf249E749382c7e894C5643B",
      "txHash": "0x500015a7f011a5ed2d805aed48eb6c3cd6b96cd66e013b09b2030983bc8f491c",
      "kind": "transparent"
    },
    {
      "address": "0x8fAF406813B458A08F35f29fAdcb40092f7B808D",
      "txHash": "0x6d6e8acddb357dd6504e35ed490467470ecf407723bffa72f3c3ad85c88a5b06",
      "kind": "transparent"
    },
    {
      "address": "0x14C16f541F4B46D9a176a146AE39acc9dBbEe8Dc",
      "txHash": "0xc99108643fefedf4e1ce79023900dc69f4f1e94237c63b00ab8241a9b0cc3180",
      "kind": "transparent"
    },
    {
      "address": "0x7fFd6C55aE4eA85287D4d47025643e240964a200",
      "txHash": "0xb2a9ffe0d428d1ac786325b8c6399eefc0f7b4be4f3ec2500cb74cee999a33b5",
      "kind": "transparent"
    },
    {
      "address": "0xF792aa151aEb2F5263a3333CABD5cb2Fe8AA023D",
      "txHash": "0xb35ae6e24c2a7137faad4d718a6813b334648d8eb005715e47b579ec0ba0c103",
      "kind": "transparent"
    },
    {
      "address": "0x0E6dE45E6100637C729eb8E1d67ECa5529EcB314",
      "txHash": "0x1bf817f236d42f72bd171f02324537d6bdf369193e16101b1e2bbf0dcd1f86bd",
      "kind": "transparent"
    },
    {
      "address": "0x40237DC7661FC53886fa042F3340ae06Eb8A94C0",
      "txHash": "0x74a615ebb50bb98a1086ff24de24c296d4b67ca0dc9ed6eb7d5bb5c05d23ba09",
      "kind": "transparent"
    },
    {
      "address": "0x9675404a7a1845324b9675B19c14BA73c376906A",
      "txHash": "0x02e762c3941800badbb1339b44295998f0a1cb5004280e464ae864162fb8cfa6",
      "kind": "transparent"
    },
    {
      "address": "0xB3B3757D3cf72F7461324C9663Df4c24C8543F9c",
      "txHash": "0x9a5dfdf8f7d285b89baaf14642bdfd68812b6aa6967e804ef99ca3d115375b3c",
      "kind": "transparent"
    },
    {
      "address": "0x0aF5737E2F8db7E8bBdf5E6d7E0f463e04F5Ce2E",
      "txHash": "0x5ccfc2e3a9cad189dc2df48a040ad8a779b27e5ad43587fbd03adb8fc0240c32",
      "kind": "transparent"
    },
    {
      "address": "0x1D0Af898B058D67cAb66d819Ba4B7b6764801E95",
      "txHash": "0xd26e47643d6baaa86b042190232dc05f7775e51ab253e352b571547d18986dbf",
      "kind": "transparent"
    },
    {
      "address": "0x6Df8a5C417FF0b60f9c592ec3FeB037Ca6573375",
      "txHash": "0x7391d8247f5211817e47ec4e79dd35a0c8232979d2338bf7c172fa1f7cdb3ede",
      "kind": "transparent"
    },
    {
      "address": "0x8Fab6f2925bb61527F46DA577dFd715bbA93ADA9",
      "txHash": "0xca993feabaea36f408aab9daa94a004eee1a13841ab61278a2b175dfca1afc81",
      "kind": "transparent"
    },
    {
      "address": "0xe9596764575245bf9c6d389c524e2f8A2776Ab56",
      "txHash": "0x951360a59591d279b48990f61e74d056d22dfa055c21952be70815e6fa78c3f2",
      "kind": "transparent"
    },
    {
      "address": "0x5D6313E460558F3a4B4Dc9fEe1e5f7E9E5f593e9",
      "txHash": "0x253e3a5e51f8940a6a6cb7f6791a017fc04237b3f6602d1415d522d91d92000e",
      "kind": "transparent"
    },
    {
      "address": "0x8A989B8604Bb6D72C84F52dbe9B2a0D03b744840",
      "txHash": "0xe72d71d415deee2484f81b0da8b7af387a3125e27f43b75eeb53f7fac014035d",
      "kind": "transparent"
    },
    {
      "address": "0x9e971Eb4019C58617f3Aadbdbe6E8B91F9444Ddc",
      "txHash": "0x8cb32741e71c5e7d382638d0974837866c0c8423ad1c1a23ddbe0d17ba848d49",
      "kind": "transparent"
    },
    {
      "address": "0x4E51D5FAF21ABAfCF73A28dcA8F69797f9345AD0",
      "txHash": "0x335e9707652152bb59f04ac5959f8d4c43c62a69cb371f688d20ea0f432db9b1",
      "kind": "transparent"
    },
    {
      "address": "0xA2829128Da6EfA304FB7Cd8fcA32475C8828cF7D",
      "txHash": "0xc3f8255453b02fb11eb530b6291309b56847004430ce304439a57ea03134e3a7",
      "kind": "transparent"
    },
    {
      "address": "0x33b5c2676711af1F4AA18cd4FFDDa3a0673D813F",
      "txHash": "0xe2d8f95be12187b366e550280a14c2bbc70ecb563367a16bbf192c127ff7bc19",
      "kind": "transparent"
    },
    {
      "address": "0x4d773b5d0B1FA8dDaEFE7a45197e19d104a51251",
      "txHash": "0xaf5567f5997bc7da7dd01e96df5302782bb103f358d90828837144e7b4333f9e",
      "kind": "transparent"
    },
    {
      "address": "0xFE775ae37aa961996106E6E478e86E2c3804D25E",
      "txHash": "0x09065faf4578b7a53d33b865069ab6027fb5ab54c63aa3a144b9fe3f51df15d3",
      "kind": "transparent"
    },
    {
      "address": "0x3Ce12760f23B48B61031079a0C9cb470a5835D49",
      "txHash": "0xb2f107ef5743ce8ca5766bb7818d50ab92e0926016fc0687a54c4d334ebcec0b",
      "kind": "transparent"
    },
    {
      "address": "0xf5be90A4c9D76f4a9981Df1Ead0917e6999fF1f1",
      "txHash": "0x6939daaec6e52cfd830c46f57aeba939d08845249546ee810a5df21717583622",
      "kind": "transparent"
    },
    {
      "address": "0x4A4fd7fEAdB2725aF92b92618A1aA158224b05c8",
      "txHash": "0x2d061140a36433dc7dac56e26b02b0c71bc15a3d1a591a17d13486468be999be",
      "kind": "transparent"
    },
    {
      "address": "0xA8002465C202d26dA4B615753988f2f595c14DbA",
      "txHash": "0x31194b152753abc32e2367e9af025b3ac97b5f8de7b1fedd778e32f4392f5373",
      "kind": "transparent"
    },
    {
      "address": "0x18CEb3fC2D052E79296dB6Bd68f8dD59CAeaD1d9",
      "txHash": "0x7a22a25cb2c9c7b3f72d747d2724bcfa35cf4d208cee1e54107c3618f130137b",
      "kind": "transparent"
    },
    {
      "address": "0xcD7a337D74E7D7D832492dB593E1D87443c4E64E",
      "txHash": "0xbf33a964271514422f5f8d3441e199f1966b469152ab676c5d5885674661ceef",
      "kind": "transparent"
    },
    {
      "address": "0xe6F25dA23888E15A5facb83B0Ffc5fC8194Eb292",
      "txHash": "0xc3726e7648798f07bbb8d14b0bcf271b924852fddaee57dd0fd94340c74c8afe",
      "kind": "transparent"
    },
    {
      "address": "0x9184D5A18FeA283896A0640360180F5562c138f9",
      "txHash": "0xbc0a3f216a7736bcd741b3878baddaa31ad9b153984484a52b48c2dd60edb420",
      "kind": "transparent"
    },
    {
      "address": "0x7aC8Fe96691b7CD754F72a5B7a0574660a48A5c2",
      "txHash": "0xb753703bf1b355f51d0c953d697499d7b99258408d9b2afb01fa58cd060f3441",
      "kind": "transparent"
    },
    {
      "address": "0x9baaa9681dA00af4CDACD2e4dD4000003f6934f7",
      "txHash": "0x088ea846060824a3f69bdf3ceef51b901cf6b3c9b65945546a9a34c626d02c39",
      "kind": "transparent"
    },
    {
      "address": "0xcd9EC624bd770771f868A8aA49c439b7bDBAC2c6",
      "txHash": "0xe9b3377fb321c2d592d88310e998f1e2b58974e19c0ebde63e7414529c56b761",
      "kind": "transparent"
    },
    {
      "address": "0xd149353305b5276a924a2267bEb88f53CaB29ce7",
      "txHash": "0xb9a67d7356ca2073e595499dc711a156b1ecc02fcc992c240142970e5f539afe",
      "kind": "transparent"
    },
    {
      "address": "0xEC4d5Cf0D97F971223D754dc1ABD4CD456b9F295",
      "txHash": "0x9442b04048fc6feed484b1d9e1e078388a4537f795e3813fd799b00962701d51",
      "kind": "transparent"
    },
    {
      "address": "0xc44F0D2D6978ca74249B780b4C7d928355d6e3d2",
      "txHash": "0x59e84e31d56685aab00845e90d3e031dd8f9748c707a4624faac68e17c0f8f88",
      "kind": "transparent"
    },
    {
      "address": "0x8e1B87B516763a2dEEFa6BdbC1374949552dAA41",
      "txHash": "0xfa8d0d02167fa6fc6c5ef2923f6507d7d0686ee22b230610e1af0684932b7681",
      "kind": "transparent"
    },
    {
      "address": "0x3890a2caac2B28418668482a7cB8B7648d545c99",
      "txHash": "0x7e8cd58fb9ddbf9af4e98ca839520c3114b6d5a989b49cb01493844871cfc903",
      "kind": "transparent"
    },
    {
      "address": "0xb63156f9DB8822987CaC93693bd81f542bb6d9AA",
      "txHash": "0x0443e92087eb2fae41a54baad352cc0072e8792ba1b6821b9505b4a387d90256",
      "kind": "transparent"
    },
    {
      "address": "0xc25C1A99f5e8fa6F36588025fB9630F53b6403F4",
      "txHash": "0xb90ccb3974c10d9ed1783b52afe9ee7c28420aaa2eb94d84c768e4aee2905b4b",
      "kind": "transparent"
    },
    {
      "address": "0x463d7e3d359A027E3D936f6368B380239AE22646",
      "txHash": "0x2b7706115ac76d386f19fbbd9287a54b037aea8ed9654568cef30aefead4ae56",
      "kind": "transparent"
    },
    {
      "address": "0x1205Aca0B8d4EEFe0AfA67675E8B11052F3275dB",
      "txHash": "0xac667e21f94d6a2b899f0e9fd395b26f02eab31b850e00e21e276a807484182e",
      "kind": "transparent"
    },
    {
      "address": "0x87b8785eB3F9E89C77976FE2C29c7A5f49FCe0C6",
      "txHash": "0x22b8db975b876fdd947ca4ce122bfeea79f993d1b50a364dc3af9ba339304d7a",
      "kind": "transparent"
    },
    {
      "address": "0xB9A7c0fB5a488ed032ad56fe1cad37dAc0b7dCb1",
      "txHash": "0x4c4838213d53c0f6dd65afdd91e4dd217ebce34ea93254ce73c5c0ed16a25f3a",
      "kind": "transparent"
    },
    {
      "address": "0xB0E0c7a8f7D72dcb1a79fc4AAf01c08f0D01cA74",
      "txHash": "0x5f2b95a3361307f4ebc121f54bd98d12d77cc3184888bfbe5daf43f8d3ec01e3",
      "kind": "transparent"
    },
    {
      "address": "0xa121C2dE8C0DE22529BB7a42618fF9797BE2d405",
      "txHash": "0x0b20299eeac8afd76d0eb0d9f269adeabe00c58ac4a028360b01a9f41a0408b8",
      "kind": "transparent"
    },
    {
      "address": "0xA2F3Fc2Ce345388DE6e5f721f9146d4534dBc5a8",
      "txHash": "0xe3290ef36907c0daa2f777b6ba3d63fb5b63b9970938c038eabf779830acd5a1",
      "kind": "transparent"
    },
    {
      "address": "0x8e240F4E95512CD5b5FE982DdE0Ed8ab45D48e73",
      "txHash": "0xf5891a95e01797974bd65ddd915a8f06cc96f6b7f872267d87113a4af36af476",
      "kind": "transparent"
    },
    {
      "address": "0xAE9d2a619ECD8e06938791C71aae279a21AB5c60",
      "txHash": "0x1c45d4b6d7e26c2af41ee7f99e46e526d2563f663e5765720439763abcfa5643",
      "kind": "transparent"
    },
    {
      "address": "0x169497D44a45D51CbFdfe82402a72ae757d2660e",
      "txHash": "0xaa5782765529965d0717b5d82945f4890be8f4b7fcb17b84d849ac53e84b42b9",
      "kind": "transparent"
    },
    {
      "address": "0xFd150C96E9Fa17bF89eB17B68E0004C2DB31E686",
      "txHash": "0x6f2f3b4e1b4415c1e95ca3f2a76b8416ba033ab5e5335b8d29c213aef037b5cc",
      "kind": "transparent"
    },
    {
      "address": "0xb24Ae3d1C33FE3Dbe5efeCccb06a4a508490f13C",
      "txHash": "0xb38988e8a3b16d5e7764d50b20ac2fd14af757496b4593d2ccf4d40398501f99",
      "kind": "transparent"
    },
    {
      "address": "0xEed639c7bC91652Cd3DFe5bE6c3C3eAbeA30769a",
      "txHash": "0x1ac52dd7b006d4c9c6460a32660e8a01b2b0ec1b7510099b36e4e46a941c8f30",
      "kind": "transparent"
    },
    {
      "address": "0x1733a7B6fF257d0470f167a05e7FDD299278218A",
      "txHash": "0x6d4106c871f20a9cf97ea1a56404289670d8e00e55372a350683f22f5fddef39",
      "kind": "transparent"
    },
    {
      "address": "0xc42C1C8B43B97eA83680CF7A11eb53Df8fFE16F3",
      "txHash": "0xa43c0b83328925260e914f6beeb2d8ff187080d68d98fb1db2136dd5da4ac61b",
      "kind": "transparent"
    },
    {
      "address": "0x7aFe8d61Ff21DA0EA6Ca16fb3eF2855925EF66AF",
      "txHash": "0xe73f676ab510d56be873104012fe8ff2d2501ce232919ddd1067e83fd5464bb1",
      "kind": "transparent"
    },
    {
      "address": "0x266D447bd9576888A065218A26F88A3A6d03362F",
      "txHash": "0x4953edd0bcc3bd169538a3d0415850e7250e2259528039977f5fdcc084b8d350",
      "kind": "transparent"
    },
    {
      "address": "0x9789b589b3Df6b73cE015386edfA4812dc863444",
      "txHash": "0xb13a0769ab38f6216c3dcb8cf13a9f170bc5cd4b1944f63656fa6a2dbc1a97e7",
      "kind": "transparent"
    },
    {
      "address": "0xe89BBCaf606f37eb807e4908818f2951cD984A13",
      "txHash": "0xcc47dfc789b760f0a72acc72ee9e4c1ef41f0727ab01d79fd9772111604dc2ec",
      "kind": "transparent"
    },
    {
      "address": "0x9Aa9da8E99C36F16Fd835200Fe1348D3355b90b2",
      "txHash": "0x3505448cd65601fd3f90ea3f5c350ac9981e65a8d64186cf2f88f1df8029cfa7",
      "kind": "transparent"
    },
    {
      "address": "0xfD4cBE6C18C080Bd5c3337C2423FC157444E4908",
      "txHash": "0xbc16115e0c68d1147a8ab2c40143098abece97895a1e8f0d45f4905a9e8f41b8",
      "kind": "transparent"
    },
    {
      "address": "0xeA361845887C2C6c2Ee56ae102F957b739068155",
      "txHash": "0x5ddd71fad54b69ad07daa78b609c869c580d6ae043751930dd3f5899ffd44e69",
      "kind": "transparent"
    },
    {
      "address": "0xA00469C9754fE3F6faC99A3096769D536D757Ba0",
      "txHash": "0x46d761168a3150c4313c59dff57ed5005a78a017967fc6b54cc6506b75565137",
      "kind": "transparent"
    },
    {
      "address": "0x9c5718e7d95c181A71FBdd1Fd177e1aB1E331143",
      "txHash": "0x186fa0a2557f8730fc2bbdeced25255834b6efb71a0bc71890871c571ebde1f3",
      "kind": "transparent"
    },
    {
      "address": "0x93F14f0a6862415eE16997252699c11BBbF6b587",
      "txHash": "0x11b6b2a8734bd6fedbc563cde013b9c42db9f06093dbd1056454382f05a797c1",
      "kind": "transparent"
    },
    {
      "address": "0xCD0208C1253E81e7bA248862269D7826a2216F88",
      "txHash": "0xeca48f03065808dce3a739bee5a1a89ac4bedbf9b73bc7f43a57bedce81d443d",
      "kind": "transparent"
    },
    {
      "address": "0xcC94D6957d2b74d99c517BAB3e16dE5CC4Ba8dBe",
      "txHash": "0x978378ee0d33402a994e0b1a4c43ebd0f1dfff9f08bcb1a51d91a1e6c873793f",
      "kind": "transparent"
    },
    {
      "address": "0xdF0D4b2d3611b50cd10d73c006EA85CEE34BaEB3",
      "txHash": "0xaba3d8bfed7df6f9326bc7e5af75492aadf851b90545fe93081083057d2d5bbc",
      "kind": "transparent"
    },
    {
      "address": "0x5204806fbecF4eAD2096b20ea1bF47B85d6BFC54",
      "txHash": "0x2c014e78d2d7a0e3b032625f9ac6c77a1520dbe0f53c0ba725ec78dd7044c2c7",
      "kind": "transparent"
    },
    {
      "address": "0x231682421c4c1224F412346659d046e9002A8577",
      "txHash": "0xb8cee2ebe8e29f3a45d8704f1e85afa6daa9be64c5776e2b8ffe4fc8ebfa6315",
      "kind": "transparent"
    },
    {
      "address": "0x9C0Db3c2948D4078dbfa692dd99Dcf546738239E",
      "txHash": "0xb02304f5002ee4fece03a444d27926badf5215a741292938caf1a84719a8367e",
      "kind": "transparent"
    }
  ],
  "impls": {
    "a69ca97fc4d80755eec58a3f5650524b74a81de9c6c4686a0d1e274e225c9b7e": {
      "address": "0xf5369b3E5CF2C634e130502F62001Db948d411E5",
      "txHash": "0x114e79e583775c82be78152d5ac211c4380f9b695e39529af02616f6ecd87c9c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)81_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:73"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:252"
          },
          {
            "contract": "AdminRole",
            "label": "__gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCTreasury\\mixins\\roles\\AdminRole.sol:41"
          },
          {
            "contract": "CollateralManagement",
            "label": "__gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCTreasury\\mixins\\CollateralManagement.sol:40"
          }
        ],
        "types": {
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)81_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)81_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b40229f6056dfa71e84105bfc4984a5a2bbe2666e89c1091c2eb2d749f6158f5": {
      "address": "0xD1Bb9B612A34081cBcc8c8cF20D92Eb88568130b",
      "txHash": "0xa3b815aad20a064ece579402d85d5874f0e7384612d1bf8c20a1fef4d7c89846",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:540"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:15"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:20"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:117"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)4984",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:22"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:153"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:45"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)6597_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:51"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:56"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:57"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:386"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)6597_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)6597_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)4984": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "1fa48e668418b4210b0d36e78c4629929e10af9c412c0da4121b3cd1ed9f9ccc": {
      "address": "0x20d28A033c9aAF6D1C8757155106bBb4db92B7E5",
      "txHash": "0x900eee140be892e67aec051cdd507ce49c8626c8aa0b77ae584745c5b1eccdb1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:540"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:15"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:20"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:117"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)4984",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:22"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:153"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:45"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)6597_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:51"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:56"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:57"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:386"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)6597_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)6597_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)4984": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "a711b369dc3950dfdf5e8ad1fc55be437224b8cfdc18447bf76f7156b435fffc": {
      "address": "0xd4D4903f5FE5fF0699f204951445a4B6a84d5c51",
      "txHash": "0xc54c7ec0833c751cd753a8ba879c0c801950f8d54329ec60bbffcde7b2eecd68",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:540"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:15"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:20"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:117"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)13048",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:23"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:158"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:45"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)14680_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:51"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:56"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:57"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:385"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)14680_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)14680_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)13048": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "0485f4d19d3bec463f9090d0103dde951bf39e04f5c6291ad24f45435c2ae834": {
      "address": "0x01926B0F6129aF7B13aC7BD7dB73Ccb0b7cFa09B",
      "txHash": "0x0cf0cc0cd64fee2b5793def201bdced533c26c9776d136af0b6d4cf5db19db6d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:540"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:15"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:20"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:117"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)13048",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:20"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:85"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:23"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:159"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:45"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)14699_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:51"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:56"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:57"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:385"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)14699_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)14699_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)13048": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "3031c26c63d594c5944841a1f2275cabd5813a9deec187ed1ff4e64e839d896e": {
      "address": "0x7aC8Fe96691b7CD754F72a5B7a0574660a48A5c2",
      "txHash": "0x39db76a48526585ceb41608aea186e4be952a17a0e1408da162c439eea1e8862",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:50"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:53"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:56"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:62"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:65"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:68"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:71"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:543"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:15"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:20"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:117"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)13048",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:20"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:85"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:23"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:159"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:45"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)14699_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:51"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:56"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:57"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:385"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)14699_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)14699_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)13048": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "aea7a1b57a11ccd7f079c7a60cbda96c9e62757ea8ff6790488ea29842b2d901": {
      "address": "0xd149353305b5276a924a2267bEb88f53CaB29ce7",
      "txHash": "0x99856d33f277079d944368f2d94e83c644002ee2f377bb3a8261afd031fbd0ae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:50"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:53"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:56"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:62"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:65"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:68"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:71"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:546"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:15"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:20"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:117"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)13048",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:20"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:85"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:23"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:159"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:45"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)14699_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:51"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:56"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:57"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:385"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)14699_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)14699_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)13048": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "b363adaf387dfdd1984ff18ace0e2457b12738636028580ac6c211546573a6c1": {
      "address": "0xc25C1A99f5e8fa6F36588025fB9630F53b6403F4",
      "txHash": "0x269dfe4275251fe017102a469c8f80c57a51ff9458d711ff374302e96afabaa5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:50"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:53"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:56"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:62"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:65"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:68"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:71"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:602"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:15"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:20"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:117"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)13048",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:20"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:85"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:23"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:159"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:45"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)14699_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:51"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:56"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:57"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:385"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)14699_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)14699_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)13048": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "55baf5e9032377ed7d4a5f7a375a087431f571bade7ef9f514408aaaad3761d6": {
      "address": "0xB9A7c0fB5a488ed032ad56fe1cad37dAc0b7dCb1",
      "txHash": "0x7c32ae95191492ddf42b1d2bf6bfb866a57c1c667d4c9edc9bab47419be5a0ce",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:50"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:53"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:56"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:62"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:65"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:68"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:71"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:601"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:15"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:20"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:117"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)13048",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:20"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:85"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:23"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:164"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:45"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)14669_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:51"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:56"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:57"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:385"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)14669_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)14669_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)13048": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "cd21677db32b674361a415c7e8e1f4da384e0ffca384cf4f6cfa70486b78d190": {
      "address": "0xAe5241ed82E7C4c109ACD8D04bC7a35dF169BDe1",
      "txHash": "0x589a06994403f488f84d0e35e498251522cfd8db291884b2f55683618ab1c8c5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:50"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:53"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:56"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:62"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:65"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:68"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:71"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:600"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:15"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:20"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:117"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)13048",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:20"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:85"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:23"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:164"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:45"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)14691_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:51"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:56"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:57"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:385"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)14691_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)14691_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)13048": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "f27a80d5296c92808b0a99fbf8a5fcded81d7e8171836e1409a8f54a36bbcc39": {
      "address": "0x169497D44a45D51CbFdfe82402a72ae757d2660e",
      "txHash": "0x081671da5dd14a265166ffd00aa64d7a00929ebe06151e6da90f68db3c931efc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:50"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:53"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:56"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:62"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:65"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:68"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:71"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:600"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:15"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:20"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:117"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)13048",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:20"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:85"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:23"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:161"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:45"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)14699_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:51"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:56"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:57"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:385"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)14699_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)14699_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)13048": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "5f9041bc17e037f9f9a656f3ca791938d9733ece1bd97f45d8a2ad256e8d7c43": {
      "address": "0x901A16F868d89B3CF8429A9b3cD80734D58558A9",
      "txHash": "0x51d38c05426ad8660ecf13d71fe490aca3bc35a1cf9a295be06496462e971f8f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:50"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:53"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:56"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:62"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:65"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:68"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:71"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:599"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:15"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:20"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:117"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)13048",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:20"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:83"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:23"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:161"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:45"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)14687_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:51"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:56"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:57"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:385"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)14687_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)14687_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)13048": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "13c00c294595b3fceec44ce3b30304986f90f53c635d64535926ee0ab16242c8": {
      "address": "0xcC94D6957d2b74d99c517BAB3e16dE5CC4Ba8dBe",
      "txHash": "0x55d00c94b329c99488eb5a8a449d62cdfdf5940a37bbeecb633d31adf9b746b9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:47"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13779_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:411"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13779_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13779_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "3de420b585ce010f37239808de0ab14bd5b50ac369cad9ddb8d472cc78b426e5": {
      "address": "0xEed639c7bC91652Cd3DFe5bE6c3C3eAbeA30769a",
      "txHash": "0xe34b4124f56d6fbc0e104ad9c5d0efef1301997c3aa420a23ee7fe56e6d75340",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:565"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:15"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:20"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:117"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:204"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "fe86ce58aeb8a1441d6a72181af583101c13339429f960117898a09ee5d571be": {
      "address": "0x77889A9Aa555469044d5F49914bde8c2f251FA01",
      "txHash": "0xde42accf17ed8ec513fffc13388e6a414c9a1e56ee391b7778db1488de8fb6b0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:47"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13798_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:409"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13798_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13798_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "d4877df9f58479e021bfaae218709a3437f5dc3b1b8cf4a930ee35ab149e3758": {
      "address": "0x57cf734252d8626dCf249E749382c7e894C5643B",
      "txHash": "0x9904b9cb7645bd1685ad318cb15e588ec3414c69cf751c7b8569f333b0a68a63",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:565"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:15"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:20"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:117"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:215"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "4aa34c67084dd5368735b60fc8814ae214e39f28dfc3c126da1f2546126e6eb0": {
      "address": "0x43ba4CC6DBf9CAf5Fd98e23B480677E99E2A8Ee0",
      "txHash": "0x67004ded24e638472a7056616f4b723ecae1d2edbee1799cba31fffc3779f846",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:565"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:15"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:20"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:117"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:217"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "f1296e67f20d9a6f47f7fde0fdf41d259fb33c4a26ef541450977658786b06b6": {
      "address": "0xB3B3757D3cf72F7461324C9663Df4c24C8543F9c",
      "txHash": "0x67d400b6a8139905aef422507f8954194f0f33c971b54147b0dd0963e5e4a30e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:565"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:15"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:20"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:117"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:208"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "abee31c2074948239b4934052472bd53b764d4d7d3dd625678a635f2d78703fa": {
      "address": "0x6Df8a5C417FF0b60f9c592ec3FeB037Ca6573375",
      "txHash": "0x2b1c43c8d5aefe28c931cc18cf51ea81ef36ee78154ba9f4344a824d99f349cc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:565"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:15"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:20"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:117"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:213"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "0786386865f57cba17e2f34c0841614ec1e26d9ce352ae67f9231d8e99d866cd": {
      "address": "0x5D6313E460558F3a4B4Dc9fEe1e5f7E9E5f593e9",
      "txHash": "0x5dcbf8d5c06a9bf8afc846e567533af8ca230e00dbb632438b37949d47cf11f9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:565"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:15"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:20"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:117"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:217"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "254b6c53ad91104f76cac06cd118ce6d390287dcefced9caad49269927fba390": {
      "address": "0xdF0D4b2d3611b50cd10d73c006EA85CEE34BaEB3",
      "txHash": "0x5677165a6dd69a0cb114a233969778c270d6f8c2e192599d91a97e093cf5a58e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:565"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:16"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:21"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:154"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:213"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "af48b4ecfe501306bfa175369489f1d738f6f778265bfd9d7168e0a9fabd32e5": {
      "address": "0x32aB79d0392F8feA76857c581106359180552606",
      "txHash": "0x2022be1b9961a585166aa9262ebf2d6ea5707cfdf80369d2b29d0e34b59b3834",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:565"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:16"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:21"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:154"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:213"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "46463638f4a33302614b8806c1d89feceac735600f907b94aefd07b005ff4a32": {
      "address": "0x8fAF406813B458A08F35f29fAdcb40092f7B808D",
      "txHash": "0x701d585a049944b13075385da76345098904a759223cfdb35536893edde0eddf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13860_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:567"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13860_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13860_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "8e91446881f6dfb056588a4d054c071bba1f469de6a7f44f2466404985c5aa80": {
      "address": "0x0E6dE45E6100637C729eb8E1d67ECa5529EcB314",
      "txHash": "0x217194ed5ad87e315e548e11d690fa43918acb96e202285f561e5c6a48656d99",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13860_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:568"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13860_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13860_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "b0ce6d188f21d0b4359f3fab1be549acc962e6f82e28d893e2a936698d22986e": {
      "address": "0x0aF5737E2F8db7E8bBdf5E6d7E0f463e04F5Ce2E",
      "txHash": "0x89aba2462732e0c98ca99656ac949eda60b16654a7d134c63bd4a423438d29e0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13763_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:568"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13763_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13763_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "8e64ba8657ee48780a82e98cafa616a6139e96822fe40cbd7bdf218f783a9ecf": {
      "address": "0xD7c05FEF7d8774460215B64FF100728FC7BfBC25",
      "txHash": "0x7cf64367f6fc06778e63f97d0d9c5be3e54998ec449a80175e360bc6bdb3538d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:565"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:16"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:21"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:150"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:220"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "71eab138200b13c9bbad9a53edc6117d31acf91c8e5a27572599e798823877d5": {
      "address": "0x50099493dc486EFd940cFEbEb82E4D01eE11441f",
      "txHash": "0x5eb483275a94b1199d481f64e397d675680b83448c3746bdc9cf3700a0156833",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:565"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:16"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:21"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:150"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:220"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "b67b5ddb617d4aeeda0215a5eed6dc7c80bcb589fbb206a69cb3e66e60c9e8a8": {
      "address": "0x33b5c2676711af1F4AA18cd4FFDDa3a0673D813F",
      "txHash": "0x8a77ef9df5a495cb1653648a63f6d5571ae477eb7198e9824e09389021d08491",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13771_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:564"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13771_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13771_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "ef18a932c7e4c9413cda60bb48a15bef7c3673fab28b842309f9ac1d9ff6a4f8": {
      "address": "0x4d773b5d0B1FA8dDaEFE7a45197e19d104a51251",
      "txHash": "0x46e6f6b145ac61551b935876544e2cc0ea4fd19950dc325999e084e6670696e0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:565"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:16"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:21"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:150"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:220"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "fbfbfb3fc8b1a793f484c0263ffc109e9d2dae94fc952413fe86e93d9d06db05": {
      "address": "0x840dfaA6C2C6799feCE6AafEFa82EaC14cE7CC60",
      "txHash": "0x9496d5916e6497d65675a9580f12838e06ef8ea78cb0e66bf8f72e76ee512a02",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:565"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:16"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:21"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:150"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:220"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "74793895c2bb44c9a76449df237f7c9ad57e8b9b38d5e320084bfa66404f17de": {
      "address": "0x18CEb3fC2D052E79296dB6Bd68f8dD59CAeaD1d9",
      "txHash": "0x03f40c4e2415075c5b4b73c0e977b8844f0c6a2cdd6f636e677f918b7f9714bc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:565"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:16"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:21"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:150"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:221"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "6c33c08f482cc1e8777cda14899e9e546f2eda56ffeb8b620397dbb41c298048": {
      "address": "0x9baaa9681dA00af4CDACD2e4dD4000003f6934f7",
      "txHash": "0x10d40f7a973c114c8da77c199fa220a290dfaf20680e5146045dd39863df57de",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:54"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:57"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:60"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:63"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:66"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:69"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:72"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:75"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:574"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:16"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:21"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:150"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:223"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "3178f6e7f078022f7079c32b39de2f3d36bd042d5cc9b99067eb27b992180a0f": {
      "address": "0x913B6B0b0C98824a23CE8642982DC99B76389648",
      "txHash": "0xd307a54e65e3d543f4bcdba2fe82cb9febd0ae30bd882c509689b99ecd5660fe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:54"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:57"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:60"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:63"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:66"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:69"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:72"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:75"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:574"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:16"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:21"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:150"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:26"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:107"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:223"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "9af6c4f17809ff4a8d93d9545f3a58702f176acad35ab938c620731fe6a1ff13": {
      "address": "0x8e1B87B516763a2dEEFa6BdbC1374949552dAA41",
      "txHash": "0x426edeea8f0bfd234635657537710ecf6789b22133fbfa7b6e218cce307e9c7e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:73"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:627"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:16"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:21"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:150"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:26"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:107"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:223"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "16e59c28daa107c2afe1eb465fb3572e01748b6616fe32267455f01f7ceee1f7": {
      "address": "0xb63156f9DB8822987CaC93693bd81f542bb6d9AA",
      "txHash": "0x94ca6e52e4fe02d004acfe212ab7af95fa151e33fd605bd8af86a1ddc0c95107",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:73"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:624"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:16"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:21"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:150"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:26"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:103"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:223"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "d7af72c98a7497169a7946f9856198cf71f594f279dd563eb77fbd82b8d016d3": {
      "address": "0x87b8785eB3F9E89C77976FE2C29c7A5f49FCe0C6",
      "txHash": "0x5f3f54ae4930f31d98443b4b2834441278aca5221a86f27c7b328e9034f6dd20",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:73"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:624"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:16"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:21"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:150"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:26"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:103"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:223"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "04869f512841c744d8fe410f7c4d1ffedb01af1e4863640cade8cef2a617b592": {
      "address": "0x3F0F7221fFAB6Ff4703b91c32830459ceFc61BaD",
      "txHash": "0x86fe5017bd531e8165e87e7ed6ff00a1af553b6e95f69333a79ccc428f00f61b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13763_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:561"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13763_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13763_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "41a99d42dc6ba0f6db19d410c07e96354c17e6b0c9aa669fbbfe10bc9e05f7dd": {
      "address": "0x77977E97d0279363Fe7862eA03BE33fe191CEFeB",
      "txHash": "0xb291827fb4a9d6b7ef6a554cfc539074605649d1118e6413f0a32ea32289b413",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:73"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:624"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:16"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:21"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:150"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:26"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:103"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:219"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "9acc59f39cf206c6f01640140abfaefbd06929ff6eb4c5d3b608e5a5ab0d11b8": {
      "address": "0x94BC5C2D7eeEBB9510176D5194Fd4882a24c58c0",
      "txHash": "0xd7a97f660fd66c24dc9f516fa5cc07d85eb1879781ac74d07b540efb91f2b61a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13728_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:558"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13728_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13728_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "e5f32e937bea8b5e551acb96079f7fcea2a687d1208cd98e476bd36717745961": {
      "address": "0xAE9d2a619ECD8e06938791C71aae279a21AB5c60",
      "txHash": "0xc8c15480dc04b473819ca1fa5cd93ed4477262b7930ee3d79fb5bcb8b7b65f7f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:73"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:624"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:16"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:21"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:146"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:26"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:103"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:217"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "1f96a17cc15ae0721cca1523143baabf4c0bc4d21ea3a0f155eb47158305b40f": {
      "address": "0x71113c254af6682646AACA9bcc250DdcF73f2B66",
      "txHash": "0x71501a271e862c56e0c979ee99f64ae2c7355469e73f76f74aded2d0f0749ed8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13730_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:557"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13730_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13730_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "a4482f2312179f4f2e90170636698db1252eb9a37c9fc9627edef5229ef673a7": {
      "address": "0x074684D1d6dCf1aa55B42e4F3c4E491850178b77",
      "txHash": "0x835f1b388c5bd2bfd05ac9fe62858b9bf8f013fccdb04fa0c60a5d63614d3ec7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13730_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:573"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13730_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13730_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "2a1c30f5f2f1baa9825b85b19961c751fd4f66affab8fc57b7472c088c8d8496": {
      "address": "0x3971eC7FA50b8f780b40C9Daae8dE9c10b04729D",
      "txHash": "0xd1c0c860e332504597ad733708027ca508c765cc28a615b7073129e8aed351a0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:73"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:628"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:16"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:21"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:146"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:26"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:103"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:217"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "a7f58ec685b35ec17cbf6dccea73c70da20a1ad3f4459e1bd64efa4d99dfc0ca": {
      "address": "0xfD4cBE6C18C080Bd5c3337C2423FC157444E4908",
      "txHash": "0xa5b36aafd213d3e60d2e1c75637b07084837d14f0136af27cf9ad6f92550f455",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:73"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:644"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:16"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:21"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:146"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:26"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:103"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:217"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "03c32cceb17c9cf42e80e83d971f8b917255cd23191072f885ea95ae64c86c80": {
      "address": "0xb24Ae3d1C33FE3Dbe5efeCccb06a4a508490f13C",
      "txHash": "0x16c60ba97152a273d8eb711e98b1ecb9a6e235b0efbe29f8fb8df4902b840afe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:73"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:646"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:16"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:21"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:146"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:26"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:103"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:217"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "42bd775b69c3af071248de64d76b79ca69f6247061f4962fc8ceafdd678ff2f5": {
      "address": "0x1733a7B6fF257d0470f167a05e7FDD299278218A",
      "txHash": "0x5a48c64e656563663fd1d15c0505130281923ef05d6e7b17c4ffd09e75724a83",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13782_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:575"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13782_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13782_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "62307f643934b534030287e720992b8e14e388a025d3f06b59062f82576662cb": {
      "address": "0x390b8c90492Cf41329c77934f8ee6A96897f869E",
      "txHash": "0xeb1f4f0df40b5c088332da56f0be6a37227f2886cde36baaefb5725b4fc27f32",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13782_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:647"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13782_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13782_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "04196a7b09f95189d5325a948465d19aecb93512ae01ffead0ad993ccb128254": {
      "address": "0xF40a93F3a30d5b4cA616ff76726582ab9f652B88",
      "txHash": "0x352adfc2837abe24c57c392f6c21d1d723142571f6d09d5c230b51da189a36ad",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13782_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:646"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13782_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13782_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "ef6c170787594dab6332817eeaf6b9b64c04810049cc6eb228ab424de0e158ae": {
      "address": "0x6221B4117d994E4fb2261b191bBaf5BCe03B1776",
      "txHash": "0x7347a8918cde080d05aefe8c34c17b3bb10004a446798c1b5adb30baf54ee46f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13782_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:612"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13782_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13782_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "cd5ae07f20a6791eea5705024d696e8df87f83a6d244aa1fd392aaf47327d3a6": {
      "address": "0x6D2bCf5eF74776Dfeba0cDB67c0cb12EA6D49289",
      "txHash": "0xc666b9ca99d4ac9924b6495b7891bf4f7bbd03a538837ad5e54596fdbb67cb71",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13782_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:612"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13782_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13782_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "869d16a923c54ac0126fdfdb8e94747101981e2f40b44b579a690e49736064f2": {
      "address": "0x76C25f14Bca0779bC951d11B1A8f01fA7909dc9C",
      "txHash": "0x02a7743c2d12f2d4f7c8d4359542daf0d4c590ac7a6cc7839db0f298b98adbf1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13782_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:613"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13782_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13782_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "5d798c4321403163c88dc9c9ce2e98f2cb104563aecb698b1f6c469e16e7d451": {
      "address": "0x9eD292Df4C84A294A2bf4AA48466B10748684AB2",
      "txHash": "0x03940a62b747e8b740be23026befa210b9de1ae995a284f62b2a7cadb2d98c54",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13794_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:620"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13794_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13794_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "10bf664804a6a9da8a9770f59bdb6f87e5d32701d81ac8bce0664b34d46e3a4a": {
      "address": "0x9789b589b3Df6b73cE015386edfA4812dc863444",
      "txHash": "0xe43d70e9f8efac3ee49367ab083344e23fdbf9b8066daaf4e5d0a10dbbd8d0ce",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:73"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:649"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:16"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:21"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:146"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:26"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:103"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:217"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "4d30d64c1975d24ca788f221d35399cb88a9a883e96470e7e70ab072f2c10897": {
      "address": "0x052b9F7E284BB9abaFADFc5c39f9BE1c689963Dd",
      "txHash": "0xac14074b5b4b35960ecab3e1ae605aa23d9d673a8a56efb472a6d82e0776d245",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13794_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:620"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13794_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13794_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "1f82b337fa739185a660d33153f28b82c1e4aabdb6ec229f669254742905c53b": {
      "address": "0x48398F53f9f289903d1b148cFef2c53704B3A541",
      "txHash": "0x6dc9176e071c55c253ca796fb676d5a94575f4b60d962d6037819473923328c3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13794_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:623"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13794_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13794_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "6f89ca580333456b449f8c78b5841e621c8ef7743c599b7c899bee6b992d3d15": {
      "address": "0xb4692Be1bE62614eE03f079AD197CeB026db93a4",
      "txHash": "0x2c01765c45cdb4ab140b100092cea8a549b3ad75c4d7ddba80704e04189e9463",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13794_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:628"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13794_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13794_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "76a98903b3d2c43e0732bd1027bbc8e1209d022862a7242ad6e1d977666979b0": {
      "address": "0x90a6975738b17aEf3E5e194eAc631d25D5929E14",
      "txHash": "0xaa820fbac7772aeea51086b529c6c0eb0f405309dc7089ce551c38a8109d2ce7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13794_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:633"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13794_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13794_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "b30f2caf6b7290684613e0b32401907b81de76d1206ea5b3cf0191474cb2cbc8": {
      "address": "0x9c5718e7d95c181A71FBdd1Fd177e1aB1E331143",
      "txHash": "0xc6e2f9db644daedbc699ce76268e5f5e02c64a129bf9855cb00a54890b8e2d00",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13794_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:636"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13794_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13794_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "a20d3e0e3b1c29f38f14a35af91ba35b2441c1dffd1e05a1a217e28dc8b1ccf7": {
      "address": "0x7aFe8d61Ff21DA0EA6Ca16fb3eF2855925EF66AF",
      "txHash": "0x876341deadefc21e773025041877acf84436cb51c55ff577472edb4e231d7700",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13794_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:636"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13794_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13794_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "6dfe6cab9046bf2a5ea24bdb0e444e32744bb6267c74061a9de11bf9115558b8": {
      "address": "0x9Aa9da8E99C36F16Fd835200Fe1348D3355b90b2",
      "txHash": "0x9590fe4d6eb32970e687d317dd960fd5d5e7ab8669e934a2998086aa9ec0a168",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13794_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:638"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13794_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13794_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "ba5080af80704e89eae754642c972f4193e57ee693742279907ba04de169ed2c": {
      "address": "0xFd150C96E9Fa17bF89eB17B68E0004C2DB31E686",
      "txHash": "0xbe91a20d9e80f4a6a90c966849a63047fdeb94e52d8036e2d498d08147a24df2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13794_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:639"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13794_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13794_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    }
  }
}
