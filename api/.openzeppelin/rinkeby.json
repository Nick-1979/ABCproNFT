{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x77889A9Aa555469044d5F49914bde8c2f251FA01",
    "txHash": "0x7a3d7b4a29798157c39d9c9138a8ea9aef77a3e54ea0b031231bfada4496cf20",
    "deployTransaction": {
      "hash": "0x7a3d7b4a29798157c39d9c9138a8ea9aef77a3e54ea0b031231bfada4496cf20",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0xa4C2E4863AFD3F1c8614A84d94f30253aca5adD2",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x3b9aca00"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 26,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x66ac6610f7c36a56ea3ea22cce636e500f2e96963bcd5271e70e655e48a7daec",
      "s": "0x687ed7cd3e904567a8f2761e7e9b5b2cf474386016c7b312c10618e616bf5b86",
      "v": 43,
      "creates": "0x77889A9Aa555469044d5F49914bde8c2f251FA01",
      "chainId": 4
    }
  },
  "proxies": [
    {
      "address": "0x7027Cad9C73Cf45526Eb7dd1d3dE84dbbB4206AE",
      "txHash": "0xedb4269fffdb4a67cf2fb19f732c7961a80c8d3853971b47323f07951d4b07ce",
      "kind": "transparent"
    },
    {
      "address": "0x57cf734252d8626dCf249E749382c7e894C5643B",
      "txHash": "0x55d389912fcbe7de64325811196caf536b6c6974161f9cff8c5a48299b057f52",
      "kind": "transparent"
    },
    {
      "address": "0x8fAF406813B458A08F35f29fAdcb40092f7B808D",
      "txHash": "0x775af2c301a230c008e8658b2e061bba3615435a2fc02be082f7ee1ef3c27d6a",
      "kind": "transparent"
    },
    {
      "address": "0x14C16f541F4B46D9a176a146AE39acc9dBbEe8Dc",
      "txHash": "0xeb3be951738a75207f8690dbe2d123979292eea72fbb468a52d54839438d3728",
      "kind": "transparent"
    },
    {
      "address": "0x7fFd6C55aE4eA85287D4d47025643e240964a200",
      "txHash": "0xdf77e9e6f664f81c6a3b8c3151cdbcdf002c477b2e8929404da5890a56ebbdda",
      "kind": "transparent"
    },
    {
      "address": "0x43ba4CC6DBf9CAf5Fd98e23B480677E99E2A8Ee0",
      "txHash": "0x6d9aea93de3c06b7cff471e328bddc5eeeb3e2cbc1fa1c976cc43bb400b9ec34",
      "kind": "transparent"
    },
    {
      "address": "0xF792aa151aEb2F5263a3333CABD5cb2Fe8AA023D",
      "txHash": "0xc90e5688aa45927b4d748fe37e9e6275d80e557f65aaf9477bad471392a09826",
      "kind": "transparent"
    },
    {
      "address": "0x0E6dE45E6100637C729eb8E1d67ECa5529EcB314",
      "txHash": "0x34c7dfd9570031528f6e38bc94e35b884d2d7d5d7b6daa6b16d5b5361ba091da",
      "kind": "transparent"
    },
    {
      "address": "0x40237DC7661FC53886fa042F3340ae06Eb8A94C0",
      "txHash": "0x801c757675f5dd70e23ec0a11faae5a0e6480a1d78f2ce0b0c85f84f8efeeeff",
      "kind": "transparent"
    },
    {
      "address": "0x815d5d70C5e3Fc969213fa6F5dd1448C66884f91",
      "txHash": "0x016436a53e91f4fbdcdbc3fa59ff6632240d7956c585ad156c4fdfdc06c4731e",
      "kind": "transparent"
    },
    {
      "address": "0x9675404a7a1845324b9675B19c14BA73c376906A",
      "txHash": "0xe3810693f3cf6e8c154cf2b02acae73b80efcf1324e8fcd0d32db3d686bfdc1a",
      "kind": "transparent"
    },
    {
      "address": "0x6221B4117d994E4fb2261b191bBaf5BCe03B1776",
      "txHash": "0x388e55092b752e58562040ca2d1b07e0f045a59a2583f67d04dc575921358ad6",
      "kind": "transparent"
    },
    {
      "address": "0x97ea2779d79BC38042175A478a9471b35753Cbc8",
      "txHash": "0xa071e81eefb07473d7c3300035249eb94379c42beebfea7c3555b14ee85d86c1",
      "kind": "transparent"
    },
    {
      "address": "0x359dC2D4045ff9FFF2d645a47Bc466710160dF6A",
      "txHash": "0x5113b5706ed14bcd7511e46438628f50b4fb27406aafcac2f64838e7495573c2",
      "kind": "transparent"
    },
    {
      "address": "0x76C25f14Bca0779bC951d11B1A8f01fA7909dc9C",
      "txHash": "0xdb3e850810d91ab54b17001cb8bca3cd2f99adde405884a3ee8c64e05d4c79e9",
      "kind": "transparent"
    },
    {
      "address": "0x836931042B244d508cc546bB509a634464060597",
      "txHash": "0xd68f097946e01978e4cb620b82a781690ec841ab0974c5fe8b429f220956910e",
      "kind": "transparent"
    },
    {
      "address": "0xBD575e1234F81c05D0d8AE8B0AB4Cc3Ce7E16c2B",
      "txHash": "0xeaa25dfe9863ea72ee91251020dc34566a7b31806dec0d8a444ecd7a31935dc6",
      "kind": "transparent"
    },
    {
      "address": "0xC42B8C59388a3b632921fD2d1c3B96c783DbdB96",
      "txHash": "0x17a2dcbaa9d2f1879ca16c6897c4089bfaddd474a0181de5c4a2afe7b529c472",
      "kind": "transparent"
    },
    {
      "address": "0x20d28A033c9aAF6D1C8757155106bBb4db92B7E5",
      "txHash": "0x9d8919bbe798f19b6d8952defb70f85fb4a2fcd1e8239df47d91830bb784849c",
      "kind": "transparent"
    },
    {
      "address": "0x9eD292Df4C84A294A2bf4AA48466B10748684AB2",
      "txHash": "0xba821b3e54a8728bac597b1b95694f5841eb8edb5cbc7811efdf59388585ffdb",
      "kind": "transparent"
    },
    {
      "address": "0xD10ea692E0379cC62234A698e6f71C2f817A2382",
      "txHash": "0xbcd3ba1b395c05419dc8579c62566e700f9b6d105ea7e16c6c3d318ef8180773",
      "kind": "transparent"
    },
    {
      "address": "0xcd283688e89Dd4a367BB636AE0C1A69425262253",
      "txHash": "0x5acd4873f6465f5888fd1d8aa78d05cc355f7bf1b2d2ad062ca69707cfe7a18b",
      "kind": "transparent"
    },
    {
      "address": "0x4A4fd7fEAdB2725aF92b92618A1aA158224b05c8",
      "txHash": "0x583c77d1344a7eeb59d2439d1e3ffeae1fb73543cf343107ddcca6ae64490b32",
      "kind": "transparent"
    },
    {
      "address": "0x37c453fBF29e876aaaf2Fbc00505C58D602f5aB0",
      "txHash": "0x7abc997d3d6bce62f1b90ad875fe95473759a2be9741e557411f89ebc302f760",
      "kind": "transparent"
    },
    {
      "address": "0x8daeFEADCF31639bAe0b76E12edd73c9f923D496",
      "txHash": "0xfebcb20257d945e2ae829166fcbe4d32ec55bb46063384d2647d9c05c9346f88",
      "kind": "transparent"
    },
    {
      "address": "0x399e2F723A8Ae9d849DcDDb99B68C0DF77Bcf3F2",
      "txHash": "0x46d25fc6612cf22c20f308e35d842067200c84e02ce91dc98e9d4c6e0106bbc1",
      "kind": "transparent"
    }
  ],
  "impls": {
    "2442b3e9da9cf4964d2743f49b4ddd5a110c1a07bff7bb1e43d86dce28253188": {
      "address": "0x2AE0b881Dd90707a6bc2D5B41fca600fdE301362",
      "txHash": "0x01c0c594c68f94f3664cc08dcb6e05bad6428e7267ced5f9997018ca2e6dfba7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)81_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:73"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:252"
          },
          {
            "contract": "AdminRole",
            "label": "__gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCproTreasury\\mixins\\roles\\AdminRole.sol:41"
          },
          {
            "contract": "CollateralManagement",
            "label": "__gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCproTreasury\\mixins\\CollateralManagement.sol:40"
          }
        ],
        "types": {
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)81_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)81_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ec085f7f8316568235ca696c476369f15128affab45803139faca756e765892e": {
      "address": "0x390b8c90492Cf41329c77934f8ee6A96897f869E",
      "txHash": "0xa0ad721e41a11b60cc508dfd57de526f37fb57490c91e3eea7c0e47d661ec77e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCproMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCproMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:537"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:15"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:20"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:117"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)2763",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:67"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:22"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:132"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)2763": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "c8ec98461ca1df89a918cc3159511c7420bc0e3fc4c5b3d498d0a4269ae6759f": {
      "address": "0x3336fbbD93e44AEA7F878f25Bfd8C9EDb5d91d30",
      "txHash": "0x716f920511f6f56db4d2f08f2579d531e36149e2db47ddb3988ac865f5662c49",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCproMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCproMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCproMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCproMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCproMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCproMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCproMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCproMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCproMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCproMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCproMarket\\mixins\\NFTMarketFees.sol:203"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCproMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCproMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCproMarket\\mixins\\NFTMarketReserveAuction.sol:42"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)5533_storage)",
            "src": "solidities\\ABCproMarket\\mixins\\NFTMarketReserveAuction.sol:43"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCproMarket\\mixins\\NFTMarketReserveAuction.sol:45"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCproMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCproMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCproMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCproMarket\\mixins\\NFTMarketReserveAuction.sol:54"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCproMarket\\mixins\\NFTMarketReserveAuction.sol:325"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)5533_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)5533_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "a69ca97fc4d80755eec58a3f5650524b74a81de9c6c4686a0d1e274e225c9b7e": {
      "address": "0xB3B3757D3cf72F7461324C9663Df4c24C8543F9c",
      "txHash": "0x0d2c5d3a2172794c0b977b857553bd03d1de2c3e9c676f0b159fc55ecb6a8168",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)81_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:73"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:252"
          },
          {
            "contract": "AdminRole",
            "label": "__gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCTreasury\\mixins\\roles\\AdminRole.sol:41"
          },
          {
            "contract": "CollateralManagement",
            "label": "__gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCTreasury\\mixins\\CollateralManagement.sol:40"
          }
        ],
        "types": {
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)81_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)81_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "40e70032f427e316aa2f3901676bf240d824420a41525f39fdc9c384f95f0bae": {
      "address": "0x0aF5737E2F8db7E8bBdf5E6d7E0f463e04F5Ce2E",
      "txHash": "0x477d5e49a16e74ec88ed072fc20c41111124a3e133359cf522ac2583911905ee",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:540"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:15"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:20"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:117"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)4984",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:22"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:153"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:45"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)6597_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:51"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:56"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:57"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:385"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)6597_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)6597_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)4984": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "5ddcf98aea7c1a648a749dd2cf40d9a94df86a368166718e4ef2a00a4a94e629": {
      "address": "0xD7c05FEF7d8774460215B64FF100728FC7BfBC25",
      "txHash": "0x4b078c1856cec4b73377b1af6b97ab4ba1cb1312dc46df144bea75ee04001f3f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\OZ\\ERC721Upgradeable.sol:540"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:15"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:20"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Creator.sol:117"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)4984",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:22"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFT721Mint.sol:153"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)4984": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "ea62f2369973bc548e8cc687ed1d644de192f924e9d2c926f6e3f4491e15044b": {
      "address": "0x8A989B8604Bb6D72C84F52dbe9B2a0D03b744840",
      "txHash": "0xfeda2b1c0c4b5e425e944ff5297a0324b6a9a302e8c7c6492de5b8379b38701d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)5682_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:47"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:49"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:52"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:54"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:57"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:389"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)5682_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)5682_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "b67b5ddb617d4aeeda0215a5eed6dc7c80bcb589fbb206a69cb3e66e60c9e8a8": {
      "address": "0x33b5c2676711af1F4AA18cd4FFDDa3a0673D813F",
      "txHash": "0x9257194be5bc286645a34e763b6ff7e62fa95e87e5af3554f47eb5ecc0209bac",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13771_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:564"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13771_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13771_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "ef18a932c7e4c9413cda60bb48a15bef7c3673fab28b842309f9ac1d9ff6a4f8": {
      "address": "0x4d773b5d0B1FA8dDaEFE7a45197e19d104a51251",
      "txHash": "0x7b271967d4a901e0bbe677c05bf0f683e8cf937995421f24e8acde8ece760490",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:565"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:16"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:21"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:150"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:20"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:81"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:220"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "ba5080af80704e89eae754642c972f4193e57ee693742279907ba04de169ed2c": {
      "address": "0x3Ce12760f23B48B61031079a0C9cb470a5835D49",
      "txHash": "0x3533290cca48b0d7b7f7d1c3c46285f2a466a4d04d9f946667a13ec2d5c338e9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "NFTMarketCore",
            "label": "______gap",
            "type": "t_array(t_uint256)950_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCore.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTMarketCreators",
            "label": "______gap",
            "type": "t_array(t_uint256)500_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketCreators.sol:59"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:16"
          },
          {
            "contract": "SendValueWithFallbackWithdraw",
            "label": "______gap",
            "type": "t_array(t_uint256)499_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\SendValueWithFallbackWithdraw.sol:85"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_primaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:34"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryABCproFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:35"
          },
          {
            "contract": "NFTMarketFees",
            "label": "_secondaryCreatorFeeBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:36"
          },
          {
            "contract": "NFTMarketFees",
            "label": "nftContractToTokenIdToFirstSaleCompleted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:38"
          },
          {
            "contract": "NFTMarketFees",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketFees.sol:206"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "nextAuctionId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:12"
          },
          {
            "contract": "NFTMarketAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketAuction.sol:22"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "nftContractToTokenIdToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:46"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "auctionIdToAuction",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuction)13794_storage)",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:48"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_minPercentIncrementInBasisPoints",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:50"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_maxBidIncrementRequirement",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:53"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "_duration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:55"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_extensionDuration",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:58"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap_was_goLiveDate",
            "type": "t_uint256",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:59"
          },
          {
            "contract": "NFTMarketReserveAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\NFTMarketReserveAuction.sol:639"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuction)13794_storage)": {
            "label": "mapping(uint256 => struct NFTMarketReserveAuction.ReserveAuction)"
          },
          "t_struct(ReserveAuction)13794_storage": {
            "label": "struct NFTMarketReserveAuction.ReserveAuction",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "extensionDuration",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)499_storage": {
            "label": "uint256[499]"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)950_storage": {
            "label": "uint256[950]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    },
    "10bf664804a6a9da8a9770f59bdb6f87e5d32701d81ac8bce0664b34d46e3a4a": {
      "address": "0xf5be90A4c9D76f4a9981Df1Ead0917e6999fF1f1",
      "txHash": "0xaa4f98736958ab67672f23b2319a62e537813dfd95b4fb1f96a92d26b0480a6b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:28"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:14"
          },
          {
            "contract": "ABCproTreasuryNode",
            "label": "__gap",
            "type": "t_array(t_uint256)2000_storage",
            "src": "solidities\\ABCNFTMarket\\mixins\\ABCproTreasuryNode.sol:32"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:25"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2522_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1875_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:58"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:61"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:64"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:67"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:70"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:73"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "solidities\\ABCNFT721\\mixins\\OZ\\ERC721Upgradeable.sol:649"
          },
          {
            "contract": "NFT721Core",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Core.sol:10"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreator",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:16"
          },
          {
            "contract": "NFT721Creator",
            "label": "tokenIdToCreatorPaymentAddress",
            "type": "t_mapping(t_uint256,t_address_payable)",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:21"
          },
          {
            "contract": "NFT721Creator",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Creator.sol:146"
          },
          {
            "contract": "NFT721Market",
            "label": "nftMarket",
            "type": "t_contract(IABCNFTMarket)10810",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:26"
          },
          {
            "contract": "NFT721Market",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Market.sol:103"
          },
          {
            "contract": "NFT721Metadata",
            "label": "creatorToIPFSHashToMinted",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:19"
          },
          {
            "contract": "NFT721Metadata",
            "label": "______gap",
            "type": "t_array(t_uint256)999_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Metadata.sol:81"
          },
          {
            "contract": "NFT721Mint",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:30"
          },
          {
            "contract": "NFT721Mint",
            "label": "______gap",
            "type": "t_array(t_uint256)1000_storage",
            "src": "solidities\\ABCNFT721\\mixins\\NFT721Mint.sol:217"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)999_storage": {
            "label": "uint256[999]"
          },
          "t_contract(IABCNFTMarket)10810": {
            "label": "contract IABCNFTMarket"
          },
          "t_mapping(t_uint256,t_address_payable)": {
            "label": "mapping(uint256 => address payable)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(UintSet)2522_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2522_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_struct(Set)2120_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1875_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1645_storage"
              }
            ]
          },
          "t_struct(Map)1645_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)2304_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)2304_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2120_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)2000_storage": {
            "label": "uint256[2000]"
          }
        }
      }
    }
  }
}
